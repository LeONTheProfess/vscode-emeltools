{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "emel",
	"scopeName": "source.emel",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
            "patterns": [
                {
                    "begin": "/\\*",
                    "end": "\\*/",
                    "name": "comment.block.emel"
                }
            ]
        },
		{
            "begin": "(^[ \\t]+)?(?=')",
            "end": "(?!\\G)",
            "patterns": [
                {
                    "begin": "'",
                    "end": "'",
                    "name": "comment.line.apostrophe.emel"
                }
            ]
        },
        {
            "match": "(?i:(\\b(is_)[a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*?\\b)(?=\\(\\)?))",
            "name": "support.function.emel"
        },
        {
            "match": "(?i:(\\b[a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*?\\b)(?=\\(\\)?))",
            "name": "entity.name.function.emel"
        },
        {
            "match":"(?i:\\b(End( )?If|End (Select|For|Loop|Switch|While))\\b)",
            "name": "keyword.conditional.end.emel"
        },
        {
            "match":"(?i:\\b(Return|As|Break|Continue|ByVal|AsExternal)\\b)",
            "name": "keyword.control.emel"
        },
        {
            "match": "(?x)\n(@?[_[:alpha:]][_[:alnum:]]*)\n(?=\n  (\\s*\\?)?\n  \\s*\\.\\s*@?[_[:alpha:]][_[:alnum:]]*\n)",
            "name": "variable.other.emel"
        },
        {
            "match": "(?i:((?<=(\\+|=|-|\\&|\\\\|\\||/|<|>|\\(|,))\\s*\\b([a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*?)\\b(?!(\\(|\\.))|\\b([a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*?)\\b(?=\\s*(\\+|=|-|\\&|\\\\|\\||/|<|>|;|ByVal|AsExternal|AS|\\(|\\)))))",
            "name": "variable.other.emel"
        },
        {
            "match": "-?\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f)?\\b",
            "name": "constant.numeric.emel"
        },
        {
            "match": "(?i:\\s*\\b(Object)\\b\\s*)",
            "name": "storage.type.standart.emel"
        }

	],
	"repository": {
        "keywords": {
			"patterns": [
                {
                    "name": "keyword.conditional.emel",
                    "match": "(?i:\\b(If|Else|While|For|Switch|Case|Select|Loop|From|With|Where|(Group|Order) by|Union|Having)\\b)"
			    },
                {
                    "match": "(?i:\\s*\\b(False|True|NULL_REF)\\b)",
                    "name": "constant.language.emel"
                }
            ]
		},
		"strings": {
			"name": "string.quoted.double.emel",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.emel",
					"match": "\\\\."
				}
			]
		}
	}
}